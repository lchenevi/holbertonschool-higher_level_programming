# 7-base_geometry.py
>>> BaseGeometry = __import__('7-base_geometry').BaseGeometry
>>> bg = BaseGeometry()


>>> try:
...    bg.area()
... except Exception as e:
...    print(e)
area() is not implemented

>>> try:
...    bg.area(2)
... except Exception as e:
...    print(e)
area() takes 1 positional argument but 2 were given

with positive integer
>>> bg.integer_validator("my_int", 12)

with negative integer
>>> bg.integer_validator("number", -12)
Traceback (most recent call last):
ValueError: number must be greater than 0

with infinite integer
>>> bg.integer_validator("infnumber", float('inf'))
Traceback (most recent call last):
TypeError: infnumber must be an integer

with 3 arguments
>>> bg.integer_validator("numbers", 1, 9)
Traceback (most recent call last):
TypeError: integer_validator() takes 3 positional arguments but 4 were given

with 1 arguments
>>> bg.integer_validator("numbers")
Traceback (most recent call last):
TypeError: integer_validator() missing 1 required positional argument: 'value'

with no arguments
>>> bg.integer_validator()
Traceback (most recent call last):
TypeError: integer_validator() missing 2 required positional arguments: 'name' and 'value'

>>> bg.integer_validator("Name", "John")
Traceback (most recent call last):
TypeError: Name must be an integer

>>> bg.integer_validator("Name", 0)
Traceback (most recent call last):
ValueError: Name must be greater than 0

>>> bg.integer_validator("distance", -4)
Traceback (most recent call last):
ValueError: distance must be greater than 0
